{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vlad\\\\Desktop\\\\sliding-puzzle-app-main\\\\sliding-puzzle-app\\\\src\\\\components\\\\collection-components\\\\ImgDownloadScale.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport useStorage from '../../hooks/useStorage';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImgDownloadScale = ({\n  file,\n  setFile\n}) => {\n  _s();\n\n  const {\n    progress,\n    url\n  } = useStorage(file); //nullify the file constant after the url is received\n\n  useEffect(() => {\n    if (url) {\n      setFile(null);\n    }\n  }, [url, setFile]);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"progress-bar\",\n    initial: {\n      width: 0\n    },\n    animate: {\n      width: progress + '%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImgDownloadScale, \"MwxW1vQ3/y4oV0sNpNvoVhcwawY=\", false, function () {\n  return [useStorage];\n});\n\n_c = ImgDownloadScale;\nexport default ImgDownloadScale;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImgDownloadScale\");","map":{"version":3,"sources":["C:/Users/Vlad/Desktop/sliding-puzzle-app-main/sliding-puzzle-app/src/components/collection-components/ImgDownloadScale.js"],"names":["React","useEffect","useStorage","motion","ImgDownloadScale","file","setFile","progress","url","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,MAAT,QAAuB,eAAvB;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AAAA;;AAC9C,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAoBN,UAAU,CAACG,IAAD,CAApC,CAD8C,CAG9C;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,GAAJ,EAAS;AACPF,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,GAJQ,EAIN,CAACE,GAAD,EAAMF,OAAN,CAJM,CAAT;AAMA,sBACE,QAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,SAAS,EAAC,cAAtB;AACE,IAAA,OAAO,EAAE;AAAEG,MAAAA,KAAK,EAAE;AAAT,KADX;AAEE,IAAA,OAAO,EAAE;AAAEA,MAAAA,KAAK,EAAEF,QAAQ,GAAG;AAApB;AAFX;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAhBD;;GAAMH,gB;UACsBF,U;;;KADtBE,gB;AAkBN,eAAeA,gBAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport useStorage from '../../hooks/useStorage';\nimport { motion } from 'framer-motion';\n\nconst ImgDownloadScale = ({ file, setFile }) => {\n  const { progress, url } = useStorage(file);\n\n  //nullify the file constant after the url is received\n  useEffect(() => {\n    if (url) {\n      setFile(null);\n    }\n  }, [url, setFile]);\n\n  return (\n    <motion.div className=\"progress-bar\"\n      initial={{ width: 0 }}\n      animate={{ width: progress + '%' }}\n    ></motion.div>\n  );\n} \n\nexport default ImgDownloadScale;"]},"metadata":{},"sourceType":"module"}