{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vlad\\\\Desktop\\\\sliding-puzzle-app-main\\\\sliding-puzzle-app\\\\src\\\\components\\\\collection-components\\\\ImgWrap.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useFirestore from '../../hooks/useFirestore';\nimport { motion } from 'framer-motion';\nimport { auth, projectFirestore } from '../../firebase';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImageWrap = () => {\n  _s();\n\n  const {\n    docs\n  } = useFirestore('users');\n  const history = useHistory(); // starts the game with the selected pict\n\n  const playPic = url => {\n    history.push({\n      // pathname: '/game',\n      pathname: '/game',\n      search: `?img=${url}`\n    });\n  }; //deletes the selected picture\n\n\n  const deletePic = async clicked_id => {\n    var user = auth.currentUser.uid;\n    console.log(clicked_id);\n    const UserCol = projectFirestore.collection(\"users\").doc(user);\n    const userDat = (await UserCol.get()).data();\n    console.log(userDat);\n    UserCol.update({\n      images: userDat.images.filter(val => val.url != clicked_id)\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"img-grid\",\n    children: docs && docs.map(doc => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"img-wrap\",\n        layout: true,\n        children: /*#__PURE__*/_jsxDEV(motion.img, {\n          src: doc.url,\n          alt: \"uploaded pic\",\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          transition: {\n            delay: 0.5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"imgOptions\",\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        transition: {\n          delay: 0.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"imgOption\",\n          onClick: () => playPic(doc.url),\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"imgOption\",\n          onClick: () => deletePic(doc.url),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, doc, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImageWrap, \"714sJ/O4p05fyjKhu+5k4ts1xlI=\", false, function () {\n  return [useFirestore, useHistory];\n});\n\n_c = ImageWrap;\nexport default ImageWrap;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageWrap\");","map":{"version":3,"sources":["C:/Users/Vlad/Desktop/sliding-puzzle-app-main/sliding-puzzle-app/src/components/collection-components/ImgWrap.js"],"names":["React","useFirestore","motion","auth","projectFirestore","useHistory","ImageWrap","docs","history","playPic","url","push","pathname","search","deletePic","clicked_id","user","currentUser","uid","console","log","UserCol","collection","doc","userDat","get","data","update","images","filter","val","map","opacity","delay"],"mappings":"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","sourcesContent":["import React from 'react';\nimport useFirestore from '../../hooks/useFirestore';\nimport { motion } from 'framer-motion';\nimport { auth, projectFirestore} from '../../firebase';\nimport { useHistory } from \"react-router-dom\";\n\n\nconst ImageWrap = () => {\n  const { docs } = useFirestore('users');\n  const history = useHistory();\n\n  // starts the game with the selected pict\n  const playPic = (url) =>{\n    history.push({\n      // pathname: '/game',\n      pathname: '/game',\n      search: `?img=${url}`\n    });\n\n  }\n\n  //deletes the selected picture\n  const deletePic = async (clicked_id)=>{\n    var user = auth.currentUser.uid\n    console.log(clicked_id)\n    const UserCol = projectFirestore.collection(\"users\").doc(user)\n    const userDat = (await UserCol.get()).data()\n    console.log(userDat)\n    UserCol.update({\n      images: userDat.images.filter(val => val.url != clicked_id)\n    })\n  }\n\n  return (\n    <div className=\"img-grid\">\n      {docs && docs.map(doc => (\n        <div  key={doc} >\n        <motion.div className=\"img-wrap\"\n          layout\n        >\n          <motion.img src={doc.url} alt=\"uploaded pic\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.5 }}\n          />\n          \n        </motion.div>\n        <motion.div className=\"imgOptions\" \n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.5 }}>\n            <button className=\"imgOption\" onClick={() => playPic(doc.url)}>Play</button>\n            <button className=\"imgOption\" onClick={() => deletePic(doc.url)}>Delete</button>\n          </motion.div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ImageWrap;"]},"metadata":{},"sourceType":"module"}