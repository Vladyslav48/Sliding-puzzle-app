{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Vlad/Desktop/sliding-puzzle-app-main/sliding-puzzle-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{TILE_COUNT,GRID_SIZE}from\"./game-values\";// Credits to https://codepen.io/unindented/pen/QNWdRQ\nexport function isSolvable(tiles){var product=1;for(var i=1,l=TILE_COUNT-1;i<=l;i++){for(var j=i+1,m=l+1;j<=m;j++){product*=(tiles[i-1]-tiles[j-1])/(i-j);}}return Math.round(product)===1;}//puzzle solved logic\nexport function isSolved(tiles){for(var i=0,l=tiles.length;i<l;i++){if(tiles[i]!==i){return false;}}return true;}// Get the linear index from a row/col pair.\nexport function getIndex(row,col){return parseInt(row,10)*GRID_SIZE+parseInt(col,10);}// Get the row/col pair from a linear index.\nexport function getMatrixPosition(index){return{row:Math.floor(index/GRID_SIZE),col:index%GRID_SIZE};}export function getVisualPosition(row,col,width,height){return{x:col*width,y:row*height};}export function shuffle(tiles){var shuffledTiles=[].concat(_toConsumableArray(tiles.filter(function(t){return t!==tiles.length-1;}).sort(function(){return Math.random()-0.5;})),[tiles.length-1]);return isSolvable(shuffledTiles)&&!isSolved(shuffledTiles)?shuffledTiles:shuffle(shuffledTiles);}export function canSwap(srcIndex,destIndex){var _getMatrixPosition=getMatrixPosition(srcIndex),srcRow=_getMatrixPosition.row,srcCol=_getMatrixPosition.col;var _getMatrixPosition2=getMatrixPosition(destIndex),destRow=_getMatrixPosition2.row,destCol=_getMatrixPosition2.col;return Math.abs(srcRow-destRow)+Math.abs(srcCol-destCol)===1;}export function swap(tiles,src,dest){var tilesResult=_toConsumableArray(tiles);var _ref=[tilesResult[dest],tilesResult[src]];tilesResult[src]=_ref[0];tilesResult[dest]=_ref[1];return tilesResult;}export function updateURLParameter(url,param,paramVal){var newAdditionalURL=\"\";var tempArray=url.split(\"?\");var baseURL=tempArray[0];var additionalURL=tempArray[1];var temp=\"\";if(additionalURL){tempArray=additionalURL.split(\"&\");for(var i=0;i<tempArray.length;i++){if(tempArray[i].split(\"=\")[0]!==param){newAdditionalURL+=temp+tempArray[i];temp=\"&\";}}}var rows_txt=temp+\"\"+param+\"=\"+paramVal;return baseURL+\"?\"+newAdditionalURL+rows_txt;}","map":{"version":3,"sources":["C:/Users/Vlad/Desktop/sliding-puzzle-app-main/sliding-puzzle-app/src/components/game-components/logic-functions.js"],"names":["TILE_COUNT","GRID_SIZE","isSolvable","tiles","product","i","l","j","m","Math","round","isSolved","length","getIndex","row","col","parseInt","getMatrixPosition","index","floor","getVisualPosition","width","height","x","y","shuffle","shuffledTiles","filter","t","sort","random","canSwap","srcIndex","destIndex","srcRow","srcCol","destRow","destCol","abs","swap","src","dest","tilesResult","updateURLParameter","url","param","paramVal","newAdditionalURL","tempArray","split","baseURL","additionalURL","temp","rows_txt"],"mappings":"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","sourcesContent":["import { TILE_COUNT, GRID_SIZE } from \"./game-values\"\n\n// Credits to https://codepen.io/unindented/pen/QNWdRQ\nexport function isSolvable(tiles) {\n  let product = 1;\n  for (let i = 1, l = TILE_COUNT - 1; i <= l; i++) {\n    for (let j = i + 1, m = l + 1; j <= m; j++) {\n      product *= (tiles[i - 1] - tiles[j - 1]) / (i - j);\n    }\n  }\n  return Math.round(product) === 1;\n}\n\n//puzzle solved logic\nexport function isSolved(tiles) {\n  for (let i = 0, l = tiles.length; i < l; i++) {\n    if (tiles[i] !== i) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Get the linear index from a row/col pair.\nexport function getIndex(row, col) {\n  return parseInt(row, 10) * GRID_SIZE + parseInt(col, 10);\n}\n\n// Get the row/col pair from a linear index.\nexport function getMatrixPosition(index) {\n  return {\n    row: Math.floor(index / GRID_SIZE),\n    col: index % GRID_SIZE,\n  };\n}\n\nexport function getVisualPosition(row, col, width, height) {\n  return {\n    x: col * width,\n    y: row * height,\n  };\n}\n\n\nexport function shuffle(tiles) {\n  const shuffledTiles = [\n    ...tiles\n      .filter((t) => t !== tiles.length - 1)\n      .sort(() => Math.random() - 0.5),\n    tiles.length - 1,\n  ];\n  return isSolvable(shuffledTiles) && !isSolved(shuffledTiles)\n    ? shuffledTiles\n    : shuffle(shuffledTiles);\n}\n\nexport function canSwap(srcIndex, destIndex) {\n  const { row: srcRow, col: srcCol } = getMatrixPosition(srcIndex);\n  const { row: destRow, col: destCol } = getMatrixPosition(destIndex);\n  return Math.abs(srcRow - destRow) + Math.abs(srcCol - destCol) === 1;\n}\n\nexport function swap(tiles, src, dest) {\n  const tilesResult = [...tiles];\n  [tilesResult[src], tilesResult[dest]] = [tilesResult[dest], tilesResult[src]];\n  return tilesResult;\n}\n\nexport function updateURLParameter(url, param, paramVal) {\n  var newAdditionalURL = \"\";\n  var tempArray = url.split(\"?\");\n  var baseURL = tempArray[0];\n  var additionalURL = tempArray[1];\n  var temp = \"\";\n  if (additionalURL) {\n    tempArray = additionalURL.split(\"&\");\n    for (var i = 0; i < tempArray.length; i++) {\n      if (tempArray[i].split(\"=\")[0] !== param) {\n        newAdditionalURL += temp + tempArray[i];\n        temp = \"&\";\n      }\n    }\n  }\n\n  var rows_txt = temp + \"\" + param + \"=\" + paramVal;\n  return baseURL + \"?\" + newAdditionalURL + rows_txt;\n}\n"]},"metadata":{},"sourceType":"module"}