{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vlad\\\\Desktop\\\\sliding-puzzle-app-main\\\\sliding-puzzle-app\\\\src\\\\components\\\\collection-components\\\\ImgUploadForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ProgressBar from './ImgDownloadScale';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImgUploadForm = () => {\n  _s();\n\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n  const types = ['image/png', 'image/jpeg']; //checks the file format to be image(png or jpeg)\n\n  const handleChange = e => {\n    let selected = e.target.files[0];\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError('');\n    } else {\n      setFile(null);\n      setError('Please select an image file (png or jpg)');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"uploadLabel\",\n        type: \"file\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"uploadSpan\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 20\n      }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }, this), file && /*#__PURE__*/_jsxDEV(ProgressBar, {\n        file: file,\n        setFile: setFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImgUploadForm, \"g4In/gal2dmIIDovhnep1NQJW40=\");\n\n_c = ImgUploadForm;\nexport default ImgUploadForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImgUploadForm\");","map":{"version":3,"sources":["C:/Users/Vlad/Desktop/sliding-puzzle-app-main/sliding-puzzle-app/src/components/collection-components/ImgUploadForm.js"],"names":["React","useState","ProgressBar","ImgUploadForm","file","setFile","error","setError","types","handleChange","e","selected","target","files","includes","type","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMO,KAAK,GAAG,CAAC,WAAD,EAAc,YAAd,CAAd,CAJ0B,CAM1B;;AACA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1B,QAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAf;;AAEA,QAAIF,QAAQ,IAAIH,KAAK,CAACM,QAAN,CAAeH,QAAQ,CAACI,IAAxB,CAAhB,EAA+C;AAC7CV,MAAAA,OAAO,CAACM,QAAD,CAAP;AACAJ,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,KAHD,MAGO;AACLF,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,MAAAA,QAAQ,CAAC,0CAAD,CAAR;AACD;AACF,GAVD;;AAYA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,aAAjB;AAA+B,QAAA,IAAI,EAAC,MAApC;AAA2C,QAAA,QAAQ,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,iBAEIH,KAAK,iBAAI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,cAFb,EAGIF,IAAI,iBAAI;AAAA,kBAAOA,IAAI,CAACY;AAAZ;AAAA;AAAA;AAAA;AAAA,cAHZ,EAIIZ,IAAI,iBAAI,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEA,IAAnB;AAAyB,QAAA,OAAO,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAJZ;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAjCD;;GAAMF,a;;KAAAA,a;AAmCN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport ProgressBar from './ImgDownloadScale';\n\nconst ImgUploadForm = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n\n  const types = ['image/png', 'image/jpeg'];\n\n  //checks the file format to be image(png or jpeg)\n  const handleChange = (e) => {\n    let selected = e.target.files[0];\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError('');\n    } else {\n      setFile(null);\n      setError('Please select an image file (png or jpg)');\n    }\n  };\n\n  return (\n    <form>\n      <label>\n        <input className=\"uploadLabel\" type=\"file\" onChange={handleChange} />\n        <span className=\"uploadSpan\">+</span>\n      </label>\n      <div className=\"output\">\n        {/* outputs either error, file name or progress bar */}\n        { error && <div className=\"error\">{ error }</div>}\n        { file && <div>{ file.name }</div> }\n        { file && <ProgressBar file={file} setFile={setFile} /> }\n      </div>\n    </form>\n  );\n}\n\nexport default ImgUploadForm;"]},"metadata":{},"sourceType":"module"}