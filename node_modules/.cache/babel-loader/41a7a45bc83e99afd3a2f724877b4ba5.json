{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vlad\\\\Desktop\\\\sliding-puzzle-app-main\\\\sliding-puzzle-app\\\\src\\\\hooks\\\\AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"../firebase\";\nimport firebase from \"firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  v4: uuidv4\n} = require('uuid');\n\nconst db = firebase.firestore();\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true); //Creates new user with the new id\n\n  function signup(email, password) {\n    auth.createUserWithEmailAndPassword(email, password).then(cred => {\n      return db.collection('users').doc(cred.user.uid).set({\n        userId: uuidv4(),\n        images: []\n      });\n    });\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []); //Gathers all the functions into variable\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword\n  }; //Makes all the higher mentioned functions available within all the Proviser's children\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AuthProvider, \"1cdeWWSmbSz3cOWqWLAt+Ta4DMY=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/Vlad/Desktop/sliding-puzzle-app-main/sliding-puzzle-app/src/hooks/AuthContext.js"],"names":["React","useContext","useState","useEffect","auth","firebase","v4","uuidv4","require","db","firestore","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","signup","email","password","createUserWithEmailAndPassword","then","cred","collection","doc","user","uid","set","userId","images","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","unsubscribe","onAuthStateChanged","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAOC,QAAP,MAAqB,UAArB;;;AACA,MAAM;AAAEC,EAAAA,EAAE,EAAEC;AAAN,IAAiBC,OAAO,CAAC,MAAD,CAA9B;;AACA,MAAMC,EAAE,GAAGJ,QAAQ,CAACK,SAAT,EAAX;AACA,MAAMC,WAAW,gBAAGX,KAAK,CAACY,aAAN,EAApB;AAGA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,SAAOZ,UAAU,CAACU,WAAD,CAAjB;AACD;;GAFeE,O;;AAKhB,OAAO,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA;;AACzC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,EAA9C;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,IAAD,CAAtC,CAFyC,CAIzC;;AACA,WAASkB,MAAT,CAAgBC,KAAhB,EAAuBC,QAAvB,EAAiC;AAC9BlB,IAAAA,IAAI,CAACmB,8BAAL,CAAoCF,KAApC,EAA2CC,QAA3C,EACEE,IADF,CACOC,IAAI,IAAG;AACX,aAAQhB,EAAE,CAACiB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BF,IAAI,CAACG,IAAL,CAAUC,GAArC,EAA0CC,GAA1C,CAA8C;AACxDC,QAAAA,MAAM,EAAExB,MAAM,EAD0C;AAExDyB,QAAAA,MAAM,EAAE;AAFgD,OAA9C,CAAR;AAIH,KANA;AAOA;;AAGH,WAASC,KAAT,CAAeZ,KAAf,EAAsBC,QAAtB,EAAgC;AAC9B,WAAOlB,IAAI,CAAC8B,0BAAL,CAAgCb,KAAhC,EAAuCC,QAAvC,CAAP;AACD;;AAED,WAASa,MAAT,GAAkB;AAChB,WAAO/B,IAAI,CAACgC,OAAL,EAAP;AACD;;AAED,WAASC,aAAT,CAAuBhB,KAAvB,EAA8B;AAC5B,WAAOjB,IAAI,CAACkC,sBAAL,CAA4BjB,KAA5B,CAAP;AACD;;AAED,WAASkB,WAAT,CAAqBlB,KAArB,EAA4B;AAC1B,WAAOL,WAAW,CAACuB,WAAZ,CAAwBlB,KAAxB,CAAP;AACD;;AAED,WAASmB,cAAT,CAAwBlB,QAAxB,EAAkC;AAChC,WAAON,WAAW,CAACwB,cAAZ,CAA2BlB,QAA3B,CAAP;AACD;;AAEDnB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsC,WAAW,GAAGrC,IAAI,CAACsC,kBAAL,CAAwBd,IAAI,IAAI;AAClDX,MAAAA,cAAc,CAACW,IAAD,CAAd;AACAT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHmB,CAApB;AAKA,WAAOsB,WAAP;AACD,GAPQ,EAON,EAPM,CAAT,CApCyC,CA6CzC;;AACA,QAAME,KAAK,GAAG;AACZ3B,IAAAA,WADY;AAEZiB,IAAAA,KAFY;AAGZb,IAAAA,MAHY;AAIZe,IAAAA,MAJY;AAKZE,IAAAA,aALY;AAMZE,IAAAA,WANY;AAOZC,IAAAA;AAPY,GAAd,CA9CyC,CAwDzC;;AACA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEG,KAA7B;AAAA,cACG,CAACzB,OAAD,IAAYH;AADf;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IA9DeD,Y;;KAAAA,Y","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\nimport firebase from \"firebase\"\r\nconst { v4: uuidv4 } = require('uuid');\r\nconst db = firebase.firestore()\r\nconst AuthContext = React.createContext()\r\n\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  //Creates new user with the new id\r\n  function signup(email, password) {\r\n     auth.createUserWithEmailAndPassword(email, password)\r\n      .then(cred =>{\r\n        return  db.collection('users').doc(cred.user.uid).set({\r\n      userId: uuidv4(),\r\n      images: []\r\n      })\r\n    })\r\n    }\r\n \r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  //Gathers all the functions into variable\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n\r\n  //Makes all the higher mentioned functions available within all the Proviser's children\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}