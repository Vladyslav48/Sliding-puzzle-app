{"ast":null,"code":"import _slicedToArray from\"C:/Users/Vlad/Desktop/sliding-puzzle-app-main/sliding-puzzle-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect}from\"react\";import{auth}from\"../firebase\";import firebase from\"firebase\";import{jsx as _jsx}from\"react/jsx-runtime\";var _require=require('uuid'),uuidv4=_require.v4;var db=firebase.firestore();var AuthContext=/*#__PURE__*/React.createContext();export function useAuth(){return useContext(AuthContext);}export function AuthProvider(_ref){var children=_ref.children;var _useState=useState(),_useState2=_slicedToArray(_useState,2),currentUser=_useState2[0],setCurrentUser=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];//Creates new user with the new id\nfunction signup(email,password){auth.createUserWithEmailAndPassword(email,password).then(function(cred){return db.collection('users').doc(cred.user.uid).set({userId:uuidv4(),images:[]});});}function login(email,password){return auth.signInWithEmailAndPassword(email,password);}function logout(){return auth.signOut();}function resetPassword(email){return auth.sendPasswordResetEmail(email);}function updateEmail(email){return currentUser.updateEmail(email);}function updatePassword(password){return currentUser.updatePassword(password);}useEffect(function(){var unsubscribe=auth.onAuthStateChanged(function(user){setCurrentUser(user);setLoading(false);});return unsubscribe;},[]);//Gathers all the functions into variable\nvar value={currentUser:currentUser,login:login,signup:signup,logout:logout,resetPassword:resetPassword,updateEmail:updateEmail,updatePassword:updatePassword};//Makes all the higher mentioned functions available within all the Proviser's children\nreturn/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:!loading&&children});}","map":{"version":3,"sources":["C:/Users/Vlad/Desktop/sliding-puzzle-app-main/sliding-puzzle-app/src/hooks/AuthContext.js"],"names":["React","useContext","useState","useEffect","auth","firebase","require","uuidv4","v4","db","firestore","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","signup","email","password","createUserWithEmailAndPassword","then","cred","collection","doc","user","uid","set","userId","images","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","unsubscribe","onAuthStateChanged","value"],"mappings":"uLAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,OAASC,IAAT,KAAqB,aAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,C,2CACA,aAAuBC,OAAO,CAAC,MAAD,CAA9B,CAAYC,MAAZ,UAAQC,EAAR,CACA,GAAMC,CAAAA,EAAE,CAAGJ,QAAQ,CAACK,SAAT,EAAX,CACA,GAAMC,CAAAA,WAAW,cAAGX,KAAK,CAACY,aAAN,EAApB,CAGA,MAAO,SAASC,CAAAA,OAAT,EAAmB,CACxB,MAAOZ,CAAAA,UAAU,CAACU,WAAD,CAAjB,CACD,CAGD,MAAO,SAASG,CAAAA,YAAT,MAAoC,IAAZC,CAAAA,QAAY,MAAZA,QAAY,CACzC,cAAsCb,QAAQ,EAA9C,wCAAOc,WAAP,eAAoBC,cAApB,eACA,eAA8Bf,QAAQ,CAAC,IAAD,CAAtC,yCAAOgB,OAAP,eAAgBC,UAAhB,eAEA;AACA,QAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuBC,QAAvB,CAAiC,CAC9BlB,IAAI,CAACmB,8BAAL,CAAoCF,KAApC,CAA2CC,QAA3C,EACEE,IADF,CACO,SAAAC,IAAI,CAAG,CACX,MAAQhB,CAAAA,EAAE,CAACiB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BF,IAAI,CAACG,IAAL,CAAUC,GAArC,EAA0CC,GAA1C,CAA8C,CACxDC,MAAM,CAAExB,MAAM,EAD0C,CAExDyB,MAAM,CAAE,EAFgD,CAA9C,CAAR,CAIH,CANA,EAOA,CAGH,QAASC,CAAAA,KAAT,CAAeZ,KAAf,CAAsBC,QAAtB,CAAgC,CAC9B,MAAOlB,CAAAA,IAAI,CAAC8B,0BAAL,CAAgCb,KAAhC,CAAuCC,QAAvC,CAAP,CACD,CAED,QAASa,CAAAA,MAAT,EAAkB,CAChB,MAAO/B,CAAAA,IAAI,CAACgC,OAAL,EAAP,CACD,CAED,QAASC,CAAAA,aAAT,CAAuBhB,KAAvB,CAA8B,CAC5B,MAAOjB,CAAAA,IAAI,CAACkC,sBAAL,CAA4BjB,KAA5B,CAAP,CACD,CAED,QAASkB,CAAAA,WAAT,CAAqBlB,KAArB,CAA4B,CAC1B,MAAOL,CAAAA,WAAW,CAACuB,WAAZ,CAAwBlB,KAAxB,CAAP,CACD,CAED,QAASmB,CAAAA,cAAT,CAAwBlB,QAAxB,CAAkC,CAChC,MAAON,CAAAA,WAAW,CAACwB,cAAZ,CAA2BlB,QAA3B,CAAP,CACD,CAEDnB,SAAS,CAAC,UAAM,CACd,GAAMsC,CAAAA,WAAW,CAAGrC,IAAI,CAACsC,kBAAL,CAAwB,SAAAd,IAAI,CAAI,CAClDX,cAAc,CAACW,IAAD,CAAd,CACAT,UAAU,CAAC,KAAD,CAAV,CACD,CAHmB,CAApB,CAKA,MAAOsB,CAAAA,WAAP,CACD,CAPQ,CAON,EAPM,CAAT,CASA;AACA,GAAME,CAAAA,KAAK,CAAG,CACZ3B,WAAW,CAAXA,WADY,CAEZiB,KAAK,CAALA,KAFY,CAGZb,MAAM,CAANA,MAHY,CAIZe,MAAM,CAANA,MAJY,CAKZE,aAAa,CAAbA,aALY,CAMZE,WAAW,CAAXA,WANY,CAOZC,cAAc,CAAdA,cAPY,CAAd,CAUA;AACA,mBACE,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAEG,KAA7B,UACG,CAACzB,OAAD,EAAYH,QADf,EADF,CAKD","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\nimport firebase from \"firebase\"\r\nconst { v4: uuidv4 } = require('uuid');\r\nconst db = firebase.firestore()\r\nconst AuthContext = React.createContext()\r\n\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  //Creates new user with the new id\r\n  function signup(email, password) {\r\n     auth.createUserWithEmailAndPassword(email, password)\r\n      .then(cred =>{\r\n        return  db.collection('users').doc(cred.user.uid).set({\r\n      userId: uuidv4(),\r\n      images: []\r\n      })\r\n    })\r\n    }\r\n \r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  //Gathers all the functions into variable\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n\r\n  //Makes all the higher mentioned functions available within all the Proviser's children\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}